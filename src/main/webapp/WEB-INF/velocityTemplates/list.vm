##<link type="text/css" rel="stylesheet"
##      href="$!{configConstant.resourcesBasicUrl}/css/lib/bootstrap.min.css?v=${configConstant.srcVersion}"/>
<link rel="stylesheet" href="/css/fuzzy_search.css" />
<div id="vmList">
    <!-- loading -->
    <div class="modal fade" id="loading" tabindex="-1" role="dialog" aria-labelledby="myModalLabel"
         data-backdrop='static'>
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h4 class="modal-title" id="myModalLabel">提示</h4>
                </div>
                <div class="modal-body">
                    请稍候...
                </div>
            </div>
        </div>
    </div>
    <div class="row-fluid">
        <div class="span12">
            <!-- BEGIN STYLE CUSTOMIZER -->
            <!-- END BEGIN STYLE CUSTOMIZER -->
            <h3 class="page-title">
                Api列表
                <small>销帮帮API</small>
            </h3>
            <ul class="breadcrumb">
                <li>
                    <i class="icon-home"></i>
                    <a href="/list.html">销帮帮</a>
                    <span class="icon-angle-right"></span>
                </li>
                <li><a href="#">Api列表</a></li>
            </ul>
        </div>
    </div>
    <div class="row-fluid">
        <div class="span12 search-group">
            <div class="control-group search-small">
                <label class="control-label">模块</label>
                <div class="controls">
                    <select class="m-wrap small" v-model="module">
                        <template v-for="(item, index) in moduleArray">
                            <option v-if="index === 0" selected :value="item.key">{{ item.value }}
                            </option>
                            <option v-else :value="item.key">{{ item.value }}
                            </option>
                        </template>
                    </select>
                </div>
            </div>
            <div class="control-group search-small">
                <label class="control-label">版本</label>
                <div class="controls">
                    <select class="m-wrap small" v-model="version">
                        <template v-for="(item, index) in versionArray">
                            <option v-if="index === 0" selected :value="item.key">{{ item.value }}
                            </option>
                            <option v-else :value="item.key">{{ item.value }}
                            </option>
                        </template>
                    </select>
                </div>
            </div>
            <div class="control-group search-big">
                <label class="control-label">Api名</label>
                <div class="controls">
                    <input type="text" class="m-wrap medium" placeholder="Api名称" v-model="apiNameLike">
                </div>

            </div>
            <div class="control-group search-big">
                <label class="control-label">URL</label>
                <div class="controls">
                    <input type="text" class="m-wrap medium" placeholder="地址" v-model="urlLike">
                </div>
            </div>
            <div class="control-group search-big">
                <label class="control-label">作者</label>
                <div class="controls">
                    <input type="text" class="m-wrap medium" placeholder="作者" v-model="authorNameLike">
                </div>
            </div>
            <div class="control-group search-btn" style="margin-top: 26px;">
                <button class="btn blue" type="button" @click="fuzzySearch">
                    <i class="icon-search"></i>
                </button>
            </div>
        </div>
    </div>
    <div class="row-fluid">
        <div class="span12">
            <!-- BEGIN SAMPLE FORM PORTLET-->
            <div class="portlet box blue tabbable">
                <div class="portlet-title">
                    <div class="caption">
                        <i class="icon-reorder"></i>
                        <span class="hidden-480">列表</span>
                    </div>
                </div>
                <div class="portlet-body form">
                    <div class="tabbable portlet-tabs">
                        <table class="table table-hover">
                            <thead>
                            <tr>
                                <th>模块</th>
                                <th>版本</th>
                                <th>Api名</th>
                                <th>URL</th>
                                <th>作者</th>
                                <th>修改时间</th>
                                <th>操作</th>
                            </tr>
                            </thead>
                            <tbody>
                            <tr v-for="(item, index) in list">
                                <td>
                                    {{ item.module }}
                                </td>
                                <td>
                                    v{{ item.version }}
                                </td>
                                <td>
                                    <a href="#" @click="intoDetail(item.id)">{{ item.name }}</a>
                                </td>
                                <td>
                                    {{ item.url }}
                                </td>
                                <td>
                                    {{ item.username }}
                                </td>
                                <td>
                                    {{ formatTime(item.updateTime) }}
                                </td>
                                <td>
                                    <button class="btn red" type="button" @click="showDeleteDialog(item.id)">
                                        <i class="icon-remove" style="margin-right: 10px;"></i>删除
                                    </button>
                                </td>
                            </tr>
                            </tbody>
                        </table>
                    </div>
                    <div class="pagination pagination-right" style="margin-right: 10px; margin-bottom: 5px;">
                        <ul>
                            <li><a href="#" @click="intoPage((page-1))">Prev</a></li>
                            <template v-for="index in pageCount">
                                <li v-if="index == page" class="disabled"><a href="#">{{ index }}</a></li>
                                <li v-else class="active"><a href="#" @click="intoPage(index)">{{ index }}</a></li>
                            </template>
                            <li><a href="#" @click="intoPage((page+1))">Next</a></li>
                        </ul>
                    </div>
                </div>
            </div>
            <!-- END SAMPLE FORM PORTLET-->
        </div>
    </div>
</div>
##<script src="$!{configConstant.resourcesBasicUrl}/js/lib/bootstrap.js?v=${configConstant.srcVersion}"
##        type="text/javascript"></script>
<script src="$!{configConstant.resourcesBasicUrl}/js/lib/vue.min.js?v=${configConstant.srcVersion}"
        type="text/javascript"></script>
<script type="text/javascript">
    var vm = new Vue({
        el: '#vmList',
        data: {
            page: 1,
            pageSize: 20,
            count: 0,
            pageCount: 1,
            list: [],
            versionArray: [],
            moduleArray: [],
            version: "",
            module: "",
            apiNameLike: "",
            urlLike: "",
            authorNameLike: "",
            updateTimeStart: 0,
            updateTimeEnd: 0,
            isFuzzySearch: false,
            old_version: "",
            old_module: "",
            old_apiNameLike: "",
            old_urlLike: "",
            old_authorNameLike: "",
            old_updateTimeStart: 0,
            old_updateTimeEnd: 0,
        },
        computed: {},
        methods: {
            formatTime: function (time) {
                return new Date(parseInt(time) * 1000).toLocaleString().replace(/\//g, '-').replace('下午', ' ')
            },
            /**
             * 获取Api文档总数
             */
            loadCount: function () {
                $('#loading').modal('show');
                $.ajax({
                    url: "/api/doc/count.do",
                    type: "POST",
                    data: {},
                    cache: false,
                    success: function (result) {
                        result = JSON.parse(result)
                        if (result.code == 0) {
                            vm.count = result.ret.count
                            if (vm.count % vm.pageSize == 0) {
                                vm.pageCount = vm.count / vm.pageSize
                            } else {
                                vm.pageCount = vm.count / vm.pageSize + 1
                            }
                            if (vm.pageCount == 0) {
                                vm.pageCount = 1
                            }
                            vm.pageCount = Math.floor(vm.pageCount)
                            vm.loadApiList()
                            vm.loadVersionList()
                            vm.loadModuleList()
                        } else {
                            alert(result.msg)
                            $('#loading').modal('hide');
                        }
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        alert('请求返回错误\nStatus：' + textStatus + '\nerrorThrown：' + errorThrown)
                    }
                });
            },
            /**
             * 获取Api文档列表
             */
            loadApiList: function () {
                $('#loading').modal('show');
                if (vm.isFuzzySearch) {
                    var params = {
                        page: this.page,
                        pageSize: this.pageSize,
                        version: this.old_version,
                        module: this.old_module,
                        apiNameLike: this.old_apiNameLike,
                        urlLike: this.old_urlLike,
                        authorNameLike: this.old_authorNameLike,
                        updateTimeStart: this.old_updateTimeStart,
                        updateTimeEnd: this.old_updateTimeEnd,
                    }
                    $.ajax({
                        url: "/api/doc/search.do",
                        type: "POST",
                        data: params,
                        cache: false,
                        success: function (result) {
                            result = JSON.parse(result)
                            if (result.code == 0) {
                                vm.list = result.ret
                                $('#loading').modal('hide');
                            } else {
                                alert(result.msg)
                                $('#loading').modal('hide');
                            }
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            alert('请求返回错误\nStatus：' + textStatus + '\nerrorThrown：' + errorThrown)
                            $('#loading').modal('hide');
                        }
                    });
                } else {
                    var params = {
                        page: this.page,
                        pageSize: this.pageSize
                    }
                    $.ajax({
                        url: "/api/doc/list.do",
                        type: "POST",
                        data: params,
                        cache: false,
                        success: function (result) {
                            result = JSON.parse(result)
                            if (result.code == 0) {
                                vm.list = result.ret
                                $('#loading').modal('hide');
                            } else {
                                alert(result.msg)
                                $('#loading').modal('hide');
                            }
                        },
                        error: function (XMLHttpRequest, textStatus, errorThrown) {
                            alert('请求返回错误\nStatus：' + textStatus + '\nerrorThrown：' + errorThrown)
                            $('#loading').modal('hide');
                        }
                    });
                }
            },
            /**
             * 跳转到指定页并获取数据
             * @param index
             */
            intoPage: function (index) {
                if (index < 1 || index > this.pageCount) {
                    // alert('翻页操作无效！')
                    return
                }
                this.page = index
                this.loadApiList()
            },
            /**
             * 跳转到详情页
             * @param id
             */
            intoDetail: function (id) {
                window.location = '/item.html?id=' + id
            },
            showDeleteDialog: function (id) {
                var mymessage = confirm('确认删除吗？');
                if (mymessage == true) {
                    this.delete(id)
                } else if (mymessage == false) {
                    // Hide
                }
            },
            /**
             * 删除
             */
            delete: function (id) {
                $('#loading').modal('show');
                $.ajax({
                    url: '/api/doc/delete.do',
                    type: 'POST',
                    data: {
                        id: id
                    },
                    cache: false,
                    success: function (result) {
                        result = JSON.parse(result)
                        if (result.code == 0) {
                            alert('删除成功')
                            location.reload()
                        } else {
                            alert(result.msg)
                            $('#loading').modal('hide');
                        }
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        alert('请求返回错误\nStatus：' + textStatus + '\nerrorThrown：' + errorThrown)
                        $('#loading').modal('hide');
                    }
                });
            },
            /**
             * 获取Api文档版本号列表
             */
            loadVersionList: function () {
                $.ajax({
                    url: "/api/doc/version.do",
                    type: "POST",
                    data: {},
                    cache: false,
                    success: function (result) {
                        result = JSON.parse(result)
                        if (result.code == 0) {
                            var versionList = result.ret;
                            if (versionList && versionList.length > 0) {
                                vm.versionArray = []
                                vm.versionArray.push({key: "", value: "全部"})
                                for (var i = 0; i < versionList.length; i++) {
                                    vm.versionArray.push({
                                        key: versionList[i],
                                        value: versionList[i]
                                    })
                                }
                            }
                        } else {
                            alert(result.msg)
                        }
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                    }
                });
            },
            /**
             * 获取模块列表
             */
            loadModuleList: function () {
                $.ajax({
                    url: "/api/doc/module.do",
                    type: "POST",
                    data: {},
                    cache: false,
                    success: function (result) {
                        result = JSON.parse(result)
                        if (result.code == 0) {
                            var moduleList = result.ret;
                            if (moduleList && moduleList.length > 0) {
                                vm.moduleArray = []
                                vm.moduleArray.push({key: "", value: "全部"})
                                for (var i = 0; i < moduleList.length; i++) {
                                    vm.moduleArray.push({
                                        key: moduleList[i],
                                        value: moduleList[i]
                                    })
                                }
                            }
                        } else {
                            alert(result.msg)
                        }
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                    }
                });
            },
            /**
             * 模糊搜索
             */
            fuzzySearch: function () {
                if (vm.version == "" && vm.module == "" && vm.apiNameLike == ""
                        && vm.urlLike == "" && vm.authorNameLike == "" && vm.updateTimeStart == 0 && vm.updateTimeEnd == 0) {
                    alert('请勿随便点击搜索按钮！')
                    return
                }
                if (vm.updateTimeStart > 0 && vm.updateTimeEnd > 0 && vm.updateTimeStart >= vm.updateTimeEnd) {
                    alert('请认真填写筛选的更新时间！')
                    return
                }
                $('#loading').modal('show');
                var params = {
                    page: 1,
                    pageSize: vm.pageSize,
                    version: vm.version,
                    module: vm.module,
                    apiNameLike: vm.apiNameLike,
                    urlLike: vm.urlLike,
                    authorNameLike: vm.authorNameLike,
                    updateTimeStart: vm.updateTimeStart,
                    updateTimeEnd: vm.updateTimeEnd,
                }
                $.ajax({
                    url: "/api/doc/search.do",
                    type: "POST",
                    data: params,
                    cache: false,
                    success: function (result) {
                        result = JSON.parse(result)
                        if (result.code == 0) {
                            vm.page = 1;
                            vm.list = result.ret
                            vm.isFuzzySearch = true
                            vm.loadFuzzySearchCount()
                            $('#loading').modal('hide');
                            vm.old_version = vm.version
                            vm.old_module = vm.module
                            vm.old_apiNameLike = vm.apiNameLike
                            vm.old_urlLike = vm.urlLike
                            vm.old_authorNameLike = vm.authorNameLike
                            vm.old_updateTimeStart = vm.updateTimeStart
                            vm.old_updateTimeEnd = vm.updateTimeEnd
                        } else {
                            alert(result.msg)
                            $('#loading').modal('hide');
                        }
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        alert('请求返回错误\nStatus：' + textStatus + '\nerrorThrown：' + errorThrown)
                        $('#loading').modal('hide');
                    }
                });
            },
            /**
             * 获取Api文档总数
             */
            loadFuzzySearchCount: function () {
                $.ajax({
                    url: "/api/doc/search/count.do",
                    type: "POST",
                    data: {
                        version: this.version,
                        module: this.module,
                        apiNameLike: this.apiNameLike,
                        urlLike: this.urlLike,
                        authorNameLike: this.authorNameLike,
                        updateTimeStart: this.updateTimeStart,
                        updateTimeEnd: this.updateTimeEnd,
                    },
                    cache: false,
                    success: function (result) {
                        result = JSON.parse(result)
                        if (result.code == 0) {
                            vm.count = result.ret.count
                            if (vm.count % vm.pageSize == 0) {
                                vm.pageCount = vm.count / vm.pageSize
                            } else {
                                vm.pageCount = vm.count / vm.pageSize + 1
                            }
                            if (vm.pageCount == 0) {
                                vm.pageCount = 1
                            }
                            vm.pageCount = Math.floor(vm.pageCount)
                        } else {
                            alert(result.msg)
                            $('#loading').modal('hide');
                        }
                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        alert('请求返回错误\nStatus：' + textStatus + '\nerrorThrown：' + errorThrown)
                    }
                });
            }
        }
    });
</script>
<script type="text/javascript">
    vm.loadCount()
</script>