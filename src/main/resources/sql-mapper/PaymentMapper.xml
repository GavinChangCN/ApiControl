<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xbongbong.dingxbb.dao.PaymentDao">

	<resultMap id="BASE-RESULT" type="com.xbongbong.dingxbb.entity.PaymentEntity">
		<result property="id" column="id" />
		<result property="corpid" column="corpid" />
		<result property="userId" column="user_id" />
		<result property="contractId" column="contract_id" />
		<result property="amount" column="amount" />
		<result property="addNum" column="add_num" />
		<result property="contractName" column="contract_name" />
		<result property="estimateTime" column="estimate_time" />
		<result property="accountPeriod" column="account_period" />
		<result property="payTime" column="pay_time" />
		<result property="status" column="status" />
		<result property="addTime" column="add_time" />
		<result property="updateTime" column="update_time" />
		<result property="del" column="del" />
		<result property="customerId" column="customer_id" />
		<result property="customerName" column="customer_name" />
		<result property="userName" column="user_name" />
		<!-- 回款编号 -->
		<result property="paymentNo" column="payment_no" />
		
		<!-- 未收款 -->
		<result property="unAmount" column="un_amount" />
		<!-- 备注 -->
		<result property="memo" column="memo" />
		
		<result property="rank" column="rank" />
		<!-- 实际回款金额 -->
		<result property="realPayment" column="real_payment" />
		<result property="paymentSheetNum" column="payment_sheet_num" />
		<!-- 部分回款时间 -->
		<result property="paymentTime" column="payment_time" />
		
	</resultMap>
	
  	<insert id="insert" parameterType="com.xbongbong.dingxbb.entity.PaymentEntity">
  		INSERT INTO tb_payment ( 
			id,corpid,user_id,contract_id,amount,contract_name,estimate_time,account_period,pay_time,status,add_time,update_time,del,customer_id,customer_name,user_name,payment_no,un_amount,memo			
  		) VALUES (
			#{id},#{corpid},#{userId},#{contractId},#{amount},#{contractName},#{estimateTime},#{accountPeriod},#{payTime},#{status},#{addTime},#{updateTime},#{del},#{customerId},#{customerName},#{userName},#{paymentNo},#{unAmount},#{memo}			
  		)   
    	<selectKey resultType="Integer" keyProperty="id">    
      		SELECT LAST_INSERT_ID()     
		</selectKey>
  	</insert>
  	
  	<update id="update" parameterType="com.xbongbong.dingxbb.entity.PaymentEntity" >
		UPDATE
			tb_payment
		SET
			 <if test="id!=null"> id = #{id} </if>
			 <if test="userId!=null">, user_id = #{userId} </if>
			 <if test="contractId!=null">, contract_id = #{contractId} </if>
			 <if test="amount!=null">, amount = #{amount} </if>
			 <if test="contractName!=null">, contract_name = #{contractName} </if>
			 <if test="estimateTime!=null">, estimate_time = #{estimateTime} </if>
			 <if test="accountPeriod!=null">, account_period = #{accountPeriod} </if>
			 <if test="payTime!=null">, pay_time = #{payTime} </if>
			 <if test="status!=null">, status = #{status} </if>
			 <if test="addTime!=null">, add_time = #{addTime} </if>
			 <if test="updateTime!=null">, update_time = #{updateTime} </if>
			 <if test="del!=null">, del = #{del} </if>
			 <if test="customerId!=null">, customer_id = #{customerId} </if>
			 <if test="customerName!=null">, customer_name = #{customerName} </if>
			 <if test="userName!=null">, user_name = #{userName} </if>
			 <if test="paymentNo!=null">, payment_no = #{paymentNo} </if>
			 <if test="unAmount!=null">, un_amount = #{unAmount} </if>
			 <if test="memo!=null">, memo = #{memo} </if>
		<where>
			id = #{id} AND corpid = #{corpid}
		</where>
	</update>
	
	
	<select id="getByKey" resultMap="BASE-RESULT">
		SELECT * FROM
			tb_payment
		<where>
			id = #{key} AND corpid = #{corpid}
		</where>
	</select>
	
	<delete id="deleteByKey">
		UPDATE
			tb_payment
		SET
			del = 1
		<where>
			id = #{key} AND corpid = #{corpid}
		</where>
	</delete>
	
	<delete id="deleteEntitys" parameterType="map">
		UPDATE
			tb_payment
		SET
			del = 1
		<where>
			<include refid="compareParamColumns" />
		</where>
	</delete>
	
	<delete id="deleteByContractId">
		UPDATE
			tb_payment
		SET
			del = 1
		<where>
			corpid = #{corpid} AND contract_id = #{contractId}
		</where>
	</delete>	
	
	<select id="findEntitys" parameterType="map" resultMap="BASE-RESULT">
		SELECT 
		<choose>
			<when test="param.columns!=null">
				${param.columns}
			</when>
			<otherwise>
				*
			</otherwise>
		</choose>
		
		FROM
			tb_payment
		<where>
			<include refid="compareParamColumns" />
		</where>
		<if test="param.orderByStr!=null">
			order by ${param.orderByStr}
		</if>
		<if test="param.start!=null and param.pageNum!=null">LIMIT #{param.start},#{param.pageNum}</if>
	</select>


	<select id="getEntitysCount" parameterType="map" resultType="int">
		SELECT count(*) FROM
			tb_payment
		<where>
			<include refid="compareParamColumns" />
		</where>
	</select>
	
	<select id="findEntitysJoin" parameterType="map" resultMap="BASE-RESULT">
		SELECT 
			p.*, SUM(ps.amount) as real_payment, COUNT(ps.id) as payment_sheet_num
		FROM
			tb_payment as p LEFT JOIN (SELECT * FROM tb_payment_sheet WHERE corpid = #{param.corpidJoin} AND del = 0 ) as ps ON p.id = ps.payment_id
		<where>
			<include refid="compareParamColumns" />
		</where>
		GROUP by p.id
		<if test="param.orderByStr!=null">
			order by ${param.orderByStr}
		</if>
		<if test="param.start!=null and param.pageNum!=null">LIMIT #{param.start},#{param.pageNum}</if>
	</select>
	
	<!-- 合同的回款  -->
	<select id="findEntitysJoinSheet" parameterType="map" resultMap="BASE-RESULT">
		SELECT 
			p.*, SUM(ps.amount) as real_payment
		FROM
			tb_payment as p LEFT JOIN (SELECT * FROM tb_payment_sheet WHERE del = 0) as ps ON p.id = ps.payment_id
		<where>
			<include refid="compareParamColumnsJoin" />
		</where>
		GROUP by p.id
		<if test="param.orderByStr!=null">
			order by ${param.orderByStr}
		</if>
		<if test="param.start!=null and param.pageNum!=null">LIMIT #{param.start},#{param.pageNum}</if>
	</select>
	
	<select id="getEntitysCountJoin" parameterType="map" resultType="int">
		SELECT 
			count(DISTINCT(p.id)) 
		FROM
			tb_payment as p LEFT JOIN tb_payment_sheet as ps ON p.id = ps.payment_id
		<where>
			<include refid="compareParamColumns" />
		</where>
	</select>
	
	<!-- 以员工汇总 -->
	<select id="statisticByStaff" parameterType="map" resultMap="BASE-RESULT">
		SELECT user_id,user_name,SUM(amount) as amount,COUNT(user_id) as add_num,status FROM
			tb_payment
		<where>
			<include refid="compareParamColumns" />
		</where>
		GROUP BY user_id ,status
		ORDER BY status
		<if test="param.start!=null and param.pageNum!=null">LIMIT #{param.start},#{param.pageNum}</if>
	</select>
	
	<!-- 获得总金额 -->
	<select id="getSumAmount" parameterType="map" resultType="double">
		SELECT SUM(amount) as amount FROM
			tb_payment 
		<where>
			<include refid="compareParamColumns" />
		</where>
		<if test="param.start!=null and param.pageNum!=null">LIMIT #{param.start},#{param.pageNum}</if>
	</select>
	
	<!-- 以部门汇总 -->
	<select id="statisticByDep" parameterType="map" resultMap="BASE-RESULT">
		SELECT SUM(amount) as amount,COUNT(user_id) as add_num,status FROM
			tb_payment 
		<where>
			<include refid="compareParamColumns" />
		</where>
		ORDER BY status
		<if test="param.start!=null and param.pageNum!=null">LIMIT #{param.start},#{param.pageNum}</if>
	</select>
	
	
	<!-- @1统计我一周的回款总额 -->
	<select id="totalSumByWeek" parameterType="map" resultType="int">
		SELECT SUM(amount) FROM
			tb_payment
		<where>
			<include refid="compareParamColumns" />
			<![CDATA[AND update_time >= #{param.nowTime} - 7 * 86400 AND update_time < #{param.nowTime}]]> 
		</where>
	</select>
	
	<!-- @2 当前月份或季度的合同总额 -->
	<select id="totalSumOfThisMonthOrSeason" parameterType="map" resultType="hashmap">
		SELECT SUM(amount) as totalSum FROM
			tb_payment
		WHERE corpid = #{param.corpid} AND del = 0
		<![CDATA[AND pay_time >= #{param.startTime} AND pay_time < #{param.endTime}]]> 
		<if test="param.userId!=null">
		AND user_id = #{param.userId}
		</if>
		<if test = "param.userIdIn!=null">
		AND user_id IN
	  		<foreach item="item" index="index" collection="param.userIdIn" open="(" separator="," close=")">
	           #{item}
            </foreach>
		</if>
  		<if test="param.status!=null">
  			AND  status = #{param.status}
  		</if>
  		<if test = "param.statusIn!=null">
	  	    AND status IN
	  		<foreach item="item" index="index" collection="param.statusIn" open="(" separator="," close=")">
	           #{item}
            </foreach>
  		</if>
	
	</select>
	
	<!-- @3 当前月份或季度的合同分组总计(总额排重)-->
	<select id="rankOfThisMonthOrSeason" parameterType="map" resultType="int">

		SELECT COUNT(DISTINCT(s.totalSum)) FROM (
			SELECT user_id,SUM(amount) AS totalSum 
			FROM tb_payment 
			WHERE corpid = #{param.corpid} AND status = #{param.status} AND del = 0 <![CDATA[ AND pay_time >= #{param.startTime} AND pay_time < #{param.endTime}]]> GROUP BY user_id ORDER  BY totalSum DESC ) AS s 
		WHERE s.totalSum >= (
			SELECT st.totalSum FROM (SELECT user_id,SUM(amount) AS totalSum FROM tb_payment WHERE corpid = #{param.corpid} AND status = #{param.status} AND del = 0 <![CDATA[ AND pay_time >= #{param.startTime} AND pay_time < #{param.endTime}]]> GROUP BY user_id HAVING user_id = #{param.userId} ORDER  BY totalSum DESC) AS st 
		) 
	</select>
	
	
	<!-- 统计时间段内客户的回款金额排名  by chy-->
 	<select id="customerAmountRank" parameterType="map" resultMap="BASE-RESULT">
		SELECT customer_name,amount,(@rowNum:=@rowNum+1) AS rank FROM(
			SELECT customer_name,sum(amount) AS amount
				FROM tb_payment
				<where>
					<include refid="compareParamColumns" />
				</where>
				GROUP BY customer_name
				Order by amount Desc) as a,(Select (@rowNum :=0) 
		) b
	</select> 
	<!-- 统计时间段内员工的回款金额排名  by chy-->
 	<select id="saleAmountRank" parameterType="map" resultMap="BASE-RESULT">
 		SELECT user_id,amount,(@rowNum:=@rowNum+1) AS rank FROM(
			SELECT user_id,sum(amount) AS amount
				FROM tb_payment
				<where>
					<include refid="compareParamColumns" />
				</where>
				GROUP BY user_id
				Order by amount Desc) as a,(Select (@rowNum :=0) 
		) b
	</select>
	
	<!-- 获得部分回款金额  与 tb_payment_sheet连表 --> 
	<select id="getSomeAmount" parameterType="map" resultType="double">
		SELECT SUM(ps.amount) FROM tb_payment AS p 
		LEFT JOIN (SELECT * FROM tb_payment_sheet WHERE corpid = #{param.corpidJoin} AND del = 0 ) AS ps
		ON p.id = ps.payment_id
		WHERE p.corpid = #{param.corpidJoin} AND p.status = 4 AND p.del = 0 
		
		<include refid="somePaymentParamColumnsJoin" />
	</select>
	
	<!-- 获得部分回款列表，统计12个月份时用到  与 tb_payment_sheet连表 --> 
	<select id="findSomeAmounts" parameterType="map" resultMap="BASE-RESULT">
		SELECT p.*, ps.amount as real_payment, ps.payment_time as paymentTime FROM tb_payment AS p 
		LEFT JOIN (SELECT * FROM tb_payment_sheet WHERE corpid = #{param.corpidJoin} AND del = 0 ) AS ps
		ON p.id = ps.payment_id
		WHERE p.corpid = #{param.corpidJoin} AND p.status = 4 AND p.del = 0 
		
		<include refid="somePaymentParamColumnsJoin" />
	</select>
	
	<!-- 与contract_user连表： 以合同为主，先统计负责的合同，以统计到的合同ids为条件，再筛选与这些合同关联的回款。 -->
	<select id="findEntitysJoinContractUser" parameterType="map" resultMap="BASE-RESULT">
	SELECT * FROM tb_payment 
		<where>
			<include refid="compareParamColumns" />
		</where>
		AND contract_id IN ( 
			SELECT contract_id FROM tb_contract_user WHERE corpid = #{param.corpid} AND del = 0
			
	  		<if test="param.isMain!=null">
	  			AND is_main = #{param.isMain}
	  		</if>
	  		<if test="param.userIdIn!=null">
	  			AND user_id IN
	  			<foreach item="item" index="index" collection="param.userIdIn" open="(" separator="," close=")">
	             	#{item}
	            </foreach>  
	  		</if>
		) 
		<if test="param.orderByStr!=null">
			order by ${param.orderByStr}
		</if>
		<if test="param.start!=null and param.pageNum!=null">LIMIT #{param.start},#{param.pageNum}</if>
	</select>
	<select id="getEntitysCountJoinContractUser" parameterType="map" resultType="int">
		SELECT count(DISTINCT(id)) FROM	tb_payment
		<where>
			<include refid="compareParamColumns" />
		</where>
		AND contract_id IN ( 
			SELECT contract_id FROM tb_contract_user WHERE corpid = #{param.corpid} AND del = 0
	  		<if test="param.isMain!=null">
	  			AND is_main = #{param.isMain}
	  		</if>
	  		<if test="param.userIdIn!=null">
	  			AND user_id IN
	  			<foreach item="item" index="index" collection="param.userIdIn" open="(" separator="," close=")">
	             	#{item}
	            </foreach>  
	  		</if>
		) 
	</select>


	<sql id="compareParamColumns">
		1 <!-- corpid = #{param.corpid} -->
		
		<if test="param.corpid!=null">
  			AND  corpid = #{param.corpid}
  		</if>

  		<if test="param.id!=null">
  			AND  id = #{param.id}
  		</if>
  		<if test="param.userId!=null">
  			AND  user_id = #{param.userId}
  		</if>
  		<if test="param.contractId!=null">
  			AND  contract_id = #{param.contractId}
  		</if>
 		<if test="param.contractIdIn!=null">
  			AND contract_id IN 
  			<foreach item="item" index="index" collection="param.contractIdIn" open="(" separator="," close=")">
             	#{item}
            </foreach>
  		</if>
  		<if test="param.amount!=null">
  			AND  amount = #{param.amount}
  		</if>
  		<if test="param.contractName!=null">
  			AND  contract_name = #{param.contractName}
  		</if>
  		<if test="param.estimateTime!=null">
  			AND  estimate_time = #{param.estimateTime}
  		</if>
  		<if test="param.accountPeriod!=null">
  			AND  account_period = #{param.accountPeriod}
  		</if>
  		<if test="param.payTime!=null">
  			AND  pay_time = #{param.payTime}
  		</if>
  		<if test="param.status!=null">
  			AND  status = #{param.status}
  		</if>
  		<if test="param.addTime!=null">
  			AND  add_time = #{param.addTime}
  		</if>
  		<if test="param.updateTime!=null">
  			AND  update_time = #{param.updateTime}
  		</if>
  		<if test="param.del!=null">
  			AND  del = #{param.del}
  		</if>
  		<if test="param.customerId!=null">
  			AND  customer_id = #{param.customerId}
  		</if>
  		<if test="param.customerName!=null">
  			AND  customer_name = #{param.customerName}
  		</if>
  		<if test="param.userName!=null">
  			AND  user_name = #{param.userName}
  		</if>
  		<if test="param.paymentNo!=null">
  			AND payment_no = #{param.paymentNo}
  		</if>
  		<if test="param.userIdIn!=null">
  			AND user_id IN
  			<foreach item="item" index="index" collection="param.userIdIn" open="(" separator="," close=")">
             	#{item}
            </foreach>  
  		</if>
  		<if test="param.statusIn!=null">
  			AND status IN
  			<foreach item="item" index="index" collection="param.statusIn" open="(" separator="," close=")">
             	#{item}
            </foreach>  
  		</if>
  		
  		<!-- 回款id -->
  		<if test="param.paymentIdIn!=null">
  			AND p.id IN 
  			<foreach item="item" index="index" collection="param.paymentIdIn" open="(" separator="," close=")">
  				#{item}
  			</foreach>
  		</if>
  		
  		<!-- 搜索合同名，客户名，回款编号 -->
  		<if test="param.contractNameLike!=null">
  			AND  contract_name like CONCAT('%',#{param.contractNameLike},'%' )
  		</if>
  		<if test="param.customerNameLike!=null">
  			AND customer_name like CONCAT('%',#{param.customerNameLike},'%')
  		</if>
  		<if test="param.paymentNoLike!=null">
  			AND payment_no like CONCAT('%',#{param.paymentNoLike},'%')
  		</if>
  		<if test="param.startTime!=null">
  			<![CDATA[AND  pay_time >= #{param.startTime}]]>
  		</if>
  		<if test="param.endTime!=null">
  			<![CDATA[AND  pay_time < #{param.endTime}]]>
  		</if>
  		
  		<if test="param.startAddTime!=null">
  			<![CDATA[AND  add_time >= #{param.startAddTime}]]>
  		</if>
  		<if test="param.endAddTime!=null">
  			<![CDATA[AND  add_time < #{param.endAddTime}]]>
  		</if>
  		
  		<if test="param.startEstimateTime!=null">
  			<![CDATA[AND  estimate_time >= #{param.startEstimateTime}]]>
  		</if>
  		<if test="param.endEstimateTime!=null">
  			<![CDATA[AND  estimate_time < #{param.endEstimateTime}]]>
  		</if>
  		
  		<if test="param.startAllTime!=null">
  			<if test="param.endAllTime!=null">
	  			<![CDATA[AND  ((#{param.endAllTime}> pay_time AND pay_time >= #{param.startAllTime}) 
	  							OR (#{param.endAllTime}> add_time AND add_time >= #{param.startAllTime}) 
	  							OR (#{param.endAllTime}> estimate_time AND estimate_time >= #{param.startAllTime}) )]]>
	  		</if>
  		</if>
  		
  		<!-- join 参数 -->
  		<if test="param.corpidJoin!=null">
  			AND p.corpid = #{param.corpidJoin}
  		</if>
  		<if test="param.userIdInJoin!=null and param.corpidJoin!=null">
  			AND p.contract_id IN 
  			(SELECT DISTINCT(c.id) FROM tb_contract as c LEFT JOIN tb_contract_user as u ON c.id = u.contract_id 
  				WHERE 
  					c.corpid = #{param.corpidJoin} AND u.user_id IN 
		  			<foreach item="item" index="index" collection="param.userIdInJoin" open="(" separator="," close=")">
		             	#{item}
		            </foreach>
		            AND c.del = 0
  			)
  			
  		</if>
  		
  		<if test="param.delJoin!=null">
  			AND p.del = #{param.delJoin}
  		</if>
	</sql>
	
	<sql id="compareParamColumnsJoin">
		1
		<if test="param.corpidJoin!=null">
  			AND p.corpid = #{param.corpidJoin}
  		</if>
  		<if test="param.contractIdJoin!=null">
  			AND p.contract_id = #{param.contractIdJoin}
  		</if>
  		<if test="param.customerId!=null">
  			AND p.customer_id = #{param.customerId}
  		</if>
  		<if test="param.delJoin!=null">
  			AND  p.del = #{param.delJoin}
  		</if>
  		
  		<!-- 统计用 -->
  		<if test="param.statusJoin!=null">
  			AND  p.status = #{param.statusJoin}
  		</if>
  		<if test="param.customerIdInJoin!=null">
  			AND ps.customer_id IN  
  			<foreach item="item" index="index" collection="param.customerIdInJoin" open="(" separator="," close=")">
			   #{item}
		    </foreach>
  		</if>
  		<if test="param.userIdInJoin!=null">
  			AND p.user_id IN
  			<foreach item="item" index="index" collection="param.userIdInJoin" open="(" separator="," close=")">
             	#{item}
            </foreach>  
  		</if>
  		<if test="param.startEstimateTime!=null">
  			<![CDATA[AND  estimate_time >= #{param.startEstimateTime}]]>
  		</if>
  		<if test="param.endEstimateTime!=null">
  			<![CDATA[AND  estimate_time < #{param.endEstimateTime}]]>
  		</if>
  		<if test="param.startTime!=null">
  			<![CDATA[AND  ps.payment_time >= #{param.startTime}]]>
  		</if>
  		<if test="param.endTime!=null">
  			<![CDATA[AND  ps.payment_time < #{param.endTime}]]>
  		</if>
	</sql>
	
	<!-- 部分回款用到 -->
	<sql id="somePaymentParamColumnsJoin">
  		<if test="param.userIdJoin!=null">
  			AND  p.user_id = #{param.userIdJoin}
  		</if>
  		<if test="param.userIdIn!=null">
  			AND p.user_id IN
  			<foreach item="item" index="index" collection="param.userIdIn" open="(" separator="," close=")">
             	#{item}
            </foreach>  
  		</if>
 		<if test="param.contractIdIn!=null">
  			AND ps.contract_id IN 
  			<foreach item="item" index="index" collection="param.contractIdIn" open="(" separator="," close=")">
             	#{item}
            </foreach>
  		</if>
  		<if test = "param.timeSpan!= null">
  			<![CDATA[AND (estimate_time - UNIX_TIMESTAMP()) > 0 AND (estimate_time - UNIX_TIMESTAMP()) < #{param.timeSpan}]]>
  		</if>
  		<if test="param.startEstimateTime!=null">
  			<![CDATA[AND  estimate_time >= #{param.startEstimateTime}]]>
  		</if>
  		<if test="param.endEstimateTime!=null">
  			<![CDATA[AND  estimate_time < #{param.endEstimateTime}]]>
  		</if>
  		<if test="param.startTime!=null">
  			<![CDATA[AND  ps.payment_time >= #{param.startTime}]]>
  		</if>
  		<if test="param.endTime!=null">
  			<![CDATA[AND  ps.payment_time < #{param.endTime}]]>
  		</if>
	</sql>
</mapper>